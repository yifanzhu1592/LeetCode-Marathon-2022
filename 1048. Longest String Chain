class Solution {
    public int longestStrChain(String[] words) {
        Arrays.sort(words, (a, b) -> a.length() - b.length());
        Map<String, Integer> map = new HashMap<String, Integer>();
        int longestChainLength = 0;
        for (String word : words) {
            int currentLongestChainLength = 0;
            for (int i = 0; i < word.length(); i++) {
                String predecessor = word.substring(0, i) + word.substring(i + 1);
                currentLongestChainLength = Math.max(currentLongestChainLength,  map.getOrDefault(predecessor, 0) + 1);
            }
            map.put(word, currentLongestChainLength);
            longestChainLength = Math.max(longestChainLength, currentLongestChainLength);
        }
        return longestChainLength;
    }
}
